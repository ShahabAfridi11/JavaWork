/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.bms.gui;

import edu.bms.ex.DuplicateEntryException;
import edu.bms.ex.InvalidNumberException;
import edu.bms.ex.SystemNotAvalibleException;
import edu.bms.gui.validators.IValidator;
import edu.bms.gui.validators.NumberValidator;
import edu.bms.service.IAccountService;
import edu.bms.service.impl.AccountService;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
/**
 *
 * @author Shahab Afridi
 */
public class IfNewAccount extends javax.swing.JInternalFrame {
    
     private static final Logger LOG = LogManager.getLogger(Bank.class);
     private static IValidator numberValidator;
     private static IAccountService accService; 

    /**
     * Creates new form ifNewAccount
     */
     
     static {
        numberValidator = new NumberValidator();
        accService = new AccountService();
     }
     
     
    public IfNewAccount() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfAccountNumber = new javax.swing.JTextField();
        lblAccountNumber = new javax.swing.JLabel();
        lblAccountHolderName = new javax.swing.JLabel();
        tfAccountHolderName = new javax.swing.JTextField();
        lblAccountType = new javax.swing.JLabel();
        tfPhoneNumber = new javax.swing.JTextField();
        lblPhoneNumber = new javax.swing.JLabel();
        tfInitialDeposit = new javax.swing.JTextField();
        lblInitialDeposit = new javax.swing.JLabel();
        lblHolderCNIC = new javax.swing.JLabel();
        btnSaveNewAccount = new javax.swing.JButton();
        cbAccountType = new javax.swing.JComboBox<>();
        lblNewAccountError = new javax.swing.JLabel();
        tfAccountHolderCNIC = new javax.swing.JFormattedTextField();

        setClosable(true);
        setTitle("New Account");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        tfAccountNumber.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        tfAccountNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfAccountNumberKeyTyped(evt);
            }
        });

        lblAccountNumber.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblAccountNumber.setText("Account Number :");

        lblAccountHolderName.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblAccountHolderName.setText("Account Holder Name : ");

        tfAccountHolderName.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        tfAccountHolderName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfAccountHolderNameKeyTyped(evt);
            }
        });

        lblAccountType.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblAccountType.setText("Account Type : ");

        tfPhoneNumber.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        lblPhoneNumber.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblPhoneNumber.setText("Phone Number : ");

        tfInitialDeposit.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        lblInitialDeposit.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblInitialDeposit.setText("Initial Deposit : ");

        lblHolderCNIC.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lblHolderCNIC.setText("Holder CNIC : ");

        btnSaveNewAccount.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btnSaveNewAccount.setText("Save");
        btnSaveNewAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveNewAccountActionPerformed(evt);
            }
        });

        cbAccountType.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cbAccountType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please Select One", "Current", "Saving" }));

        lblNewAccountError.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        try {
            tfAccountHolderCNIC.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-#######-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        tfAccountHolderCNIC.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        tfAccountHolderCNIC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfAccountHolderCNICKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(btnSaveNewAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblHolderCNIC)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblNewAccountError, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPhoneNumber)
                                    .addComponent(lblAccountType))
                                .addGap(54, 54, 54)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfPhoneNumber, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(tfAccountHolderCNIC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                                    .addComponent(cbAccountType, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblAccountNumber)
                                        .addGap(46, 46, 46))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblAccountHolderName)
                                        .addGap(18, 18, 18)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfAccountHolderName)
                                    .addComponent(tfAccountNumber)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblInitialDeposit)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(147, 147, 147)
                                .addComponent(tfInitialDeposit)))
                        .addGap(118, 118, 118))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAccountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfAccountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfAccountHolderName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAccountHolderName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInitialDeposit, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfInitialDeposit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHolderCNIC, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfAccountHolderCNIC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(lblNewAccountError, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSaveNewAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveNewAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveNewAccountActionPerformed
        // TODO add your handling code here:
        boolean validatedSuccessfully = true;
        
        /**
         * this below try and catch
         * is for the validation of initial deposit in initial deposit text field
         * we restrict the initial deposit text field to take only decimal
        */
        try {
            this.numberValidator.validateInitialDeposit(this.tfInitialDeposit.getText());
        } catch(InvalidNumberException excep){
            validatedSuccessfully = false;
            JOptionPane.showMessageDialog(null, "deposit amount must be in fraction",
                    "Wrong Entry",0);
            //LOG.info("Wrong Entry",excep);
            //return;
        }
        
        /**
         * this below try and catch
         * is for the validation of account number in account number text fields
         * we restrict the account number text fields to take only numbers
         */
        try {
            this.numberValidator.validateAccountNumber(this.tfAccountNumber.getText());
        } catch(InvalidNumberException ine){
            validatedSuccessfully = false;
            JOptionPane.showMessageDialog(null, "Account Number Must Be A Number",
                    "Wrong Entry", 0);
        }
        
        /**
         * the below block of code is to call method of account services 
         * to take data from the GUI text fields to the XML file
         * if the state of validatedSuccessfully is true
         */
        if(validatedSuccessfully) {
            try {
                this.accService.openAccount(
                Long.parseLong(tfAccountNumber.getText()),
                tfAccountHolderName.getText(),
                tfAccountHolderCNIC.getText(),
                tfPhoneNumber.getText(),
                cbAccountType.getSelectedItem().toString(),
                Double.parseDouble(tfInitialDeposit.getText()));
            } catch (SystemNotAvalibleException | DuplicateEntryException ex) {
                
            }
            
        }
            
        
//        if (this.tfAccountNumber.getText().trim().equals("")) {
//            this.lblNewAccountError.setText(lblAccountNumber.getText()+" is must"
//                    + " be assigned");
//            //accountNumber = tfAccountNumber.getText().toString();
//        } else if (this.tfAccountHolderName.getText().trim().equals("")) {
//            this.lblNewAccountError.setText(this.lblAccountHolderName.getText()
//                    +" account "+ "holder must have name");
//        } else if (this.tfPhoneNumber.getText().trim().equals("")) {
//            this.lblNewAccountError.setText(this.lblPhoneNumber.getText()+" account holder"
//                    + " must provide a phone number");
//        } else if (this.tfInitialDeposit.getText().trim().equals("")) {
//            this.lblNewAccountError.setText(this.lblInitialDeposit.getText()+" account "
//                    + "holder must deposit some initial Ammount");
//        } else if (this.tfAccountHolderCNIC.getText().trim().equals("")) {
//            this.lblNewAccountError.setText(this.lblHolderCNIC.getText()+" account "
//                    + "holder must Provide his/her Cnic Number");
//        } else {
//            this.lblNewAccountError.setText("Done");
//        }
//        
        LOG.info("Account Number : "+tfAccountNumber.getText());
        LOG.info("Account Holder Name : "+tfAccountHolderName.getText());
        LOG.info("Account Type : "+cbAccountType.getSelectedItem());
        LOG.info("Phone Number : "+tfPhoneNumber.getText());
        LOG.info("Initial Deposit : "+tfInitialDeposit.getText());
        LOG.info("Account Holder CNIC : "+tfAccountHolderCNIC.getText());
        
        
    }//GEN-LAST:event_btnSaveNewAccountActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        int selection = JOptionPane.showConfirmDialog(null, "Are You Sure ?", "Warning", JOptionPane.YES_NO_OPTION);
        if (selection == JOptionPane.YES_OPTION) {
            this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        } else {
            this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_formInternalFrameClosing

    private void tfAccountNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfAccountNumberKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
            //LOG.info("Not Done");
        }else {
            //LOG.info("Done");
        }
    }//GEN-LAST:event_tfAccountNumberKeyTyped

    private void tfAccountHolderNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfAccountHolderNameKeyTyped
        // TODO add your handling code here:
        if (Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_tfAccountHolderNameKeyTyped

    private void tfAccountHolderCNICKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfAccountHolderCNICKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_tfAccountHolderCNICKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSaveNewAccount;
    private javax.swing.JComboBox<String> cbAccountType;
    private javax.swing.JLabel lblAccountHolderName;
    private javax.swing.JLabel lblAccountNumber;
    private javax.swing.JLabel lblAccountType;
    private javax.swing.JLabel lblHolderCNIC;
    private javax.swing.JLabel lblInitialDeposit;
    private javax.swing.JLabel lblNewAccountError;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JFormattedTextField tfAccountHolderCNIC;
    private javax.swing.JTextField tfAccountHolderName;
    private javax.swing.JTextField tfAccountNumber;
    private javax.swing.JTextField tfInitialDeposit;
    private javax.swing.JTextField tfPhoneNumber;
    // End of variables declaration//GEN-END:variables
}
